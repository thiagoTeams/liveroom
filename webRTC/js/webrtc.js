"use strict";class Webrtc extends EventTarget{constructor(e,i,t=null,s={log:!0,warn:!0,error:!0}){super(),this.liveMeshHub=e,this.pcConfig=t,this.onlineUser=i,this._roomId,this._myId=null,this.pcs={},this.streams={},this.inCall=!1,this.isNewJoin=!1,this.isReady=!1,this._isAdmin=!1,this._localStream=null,this.log=s.log?console.log:()=>{},this.logWarn=s.warn?console.warn:()=>{},this.logError=s.error?console.error:()=>{},this._onEventListeners()}_emitToView(e,i){this.dispatchEvent(new CustomEvent(e,{detail:i}))}joinRoom(e){return this._roomId?(this.logWarn("Rời khỏi phòng hiện tại trước khi tham gia phòng mới"),void this._emitToView("view_NewNotification",{notification:"Rời khỏi phòng hiện tại trước khi tham gia phòng mới"})):e?(this.log(`SendCreateOrJoin: Tham gia phòng ${e}`),void this.liveMeshHub.invoke("SendCreateOrJoin",this.onlineUser,e).catch((e=>{this.logError(e),this.logError("Không thể kết nối bạn với máy chủ tín hiệu"),this._emitToView("view_NewNotification",{notification:"Không thể kết nối bạn với máy chủ tín hiệu"})}))):(this.logWarn("Không cung cấp ID phòng"),void this._emitToView("view_NewNotification",{notification:"Không cung cấp ID phòng"}))}gotStream(){this._roomId?this._sendMessage({type:"gotstream"},null,this._roomId):(this.logWarn("Nên tham gia phòng trước khi gửi luồng"),this._emitToView("view_NewNotification",{notification:"Nên tham gia phòng trước khi gửi luồng"}))}leaveRoom(e,i,t){if(!this._roomId)return this.logWarn("Hiện tại bạn không ở trong phòng"),void this._emitToView("view_NewNotification",{notification:"Hiện tại bạn không ở trong phòng"});for(var s in this.isReady=!1,this.liveMeshHub.invoke("SendLeaveRoom",this.onlineUser,this._roomId).catch((e=>{this.logError(e),this.logError("Không thể kết nối bạn với máy chủ tín hiệu"),this._emitToView("view_NewNotification",{notification:"Không thể kết nối bạn với máy chủ tín hiệu"})})),this._localStream&&this._localStream.getTracks().forEach((function(e){e.stop()})),this.pcs)this.pcs[s].getSenders().forEach((e=>{e.track&&e.track.stop()}))}getCameraStream(e,i,t,s,o){return navigator.mediaDevices.getUserMedia({audio:s,video:o}).then((e=>{for(var i in this.log("Có luồng camera cục bộ"),this._localStream&&this._localStream.getTracks().forEach((function(e){e.stop()})),this._localStream=e,this.pcs){this.pcs[i].getSenders().find((function(e){return"video"===e.track.kind})).replaceTrack(this._localStream.getVideoTracks()[0])}return e})).catch((()=>{this.logError("Không thể lấy được camera"),this._emitToView("view_NewError",{error:"Không thể lấy được camera"})}))}getScreenStream(e,i,t,s){return navigator.mediaDevices.getDisplayMedia({video:!0}).then((e=>{for(var i in e.getVideoTracks()[0].onended=()=>{this.log("Chia sẽ màn hình đã kết thúc"),this.isReady&&s&&(this.log("Kết nối vẫn sẵn sàng, tự động chuyển qua camera"),s())},this._localStream&&this._localStream.getTracks().forEach((function(e){e.stop()})),this.log("Có luồng màn hình cục bộ"),this._localStream=e,this.pcs){this.pcs[i].getSenders().find((function(e){return"video"===e.track.kind})).replaceTrack(this._localStream.getVideoTracks()[0])}return e})).catch((()=>{this.logError("Không thể lấy được screen"),this._emitToView("view_NewError",{error:"Không thể lấy được screen"})}))}_onEventListeners(){this.liveMeshHub.on("UpdateCreated",((e,i,t)=>{this.log(`[UpdateCreated] ${t} Đã tạo phòng: `+i),this._myId=t,this._roomId=i,this.isNewJoin=!1,this.isReady=!0,this._isAdmin=!0,this._emitToView("view_CreatedRoom",{roomId:i}),this.gotStream()})),this.liveMeshHub.on("UpdateJoined",((e,i,t)=>{this.log(`[UpdateJoined] ${t} Đã tham gia phòng: `+i),this._myId=t,this._roomId=i,this.isNewJoin=!0,this._emitToView("view_JoinedRoom",{roomId:i}),this.gotStream()})),this.liveMeshHub.on("UpdateJoin",((e,i)=>{this.log("[UpdateJoin] Incoming request to join room: "+i),this.isNewJoin=!0})),this.liveMeshHub.on("UpdateReady",((e,i)=>{i!==this._myId&&this.inCall&&(this.log("[UpdateReady]",i,"đã sẵn sàng mở kết nối"),this.isReady=!0)})),this.liveMeshHub.on("UpdateLeaveRoom",((e,i)=>{this.log("[UpdateLeaveRoom] Bạn đã rời phòng: ",i),i===this._roomId&&(this.logWarn(`Leave the room ${i}`),this._roomId=null,this._removeUser(),this._emitToView("view_LeaveRoom",{roomId:i}))})),this.liveMeshHub.on("UpdateKickout",((e,i)=>{this.log("[UpdateKickout] Người dùng",i,"bị chủ phòng đá ra ngoài"),i===this._myId?(this._emitToView("view_Kicked",{}),this._removeUser()):this._removeUser(i)})),this.liveMeshHub.on("UpdateMessage",((e,i,t)=>{if(this.log("[UpdateMessage] From",t,"received:",i.type),"leave"===i.type)return this.log("[UpdateMessage]",t,"leave the room..."),this._removeUser(t),this.isReady=!0,void this._handleUserLeave(t);if(this.pcs[t]&&"connected"===this.pcs[t].connectionState)this.log("[UpdateMessage]","Connection with ",t,"is already established");else switch(i.type){case"gotstream":t!==this._myId&&(this.log(`[UpdateMessage] ${t} đã sẵn sàng chia sẻ luồng của họ`),this._connect(t));break;case"offer":this.pcs[t]||this._connect(t),this.log("[UpdateMessage]","setRemoteDescription:",i.type),this.pcs[t].setRemoteDescription(new RTCSessionDescription(i)),this._answer(t);break;case"answer":this.log("[UpdateMessage]","setRemoteDescription:",i.type),this.pcs[t].setRemoteDescription(new RTCSessionDescription(i));break;case"candidate":this.inCall=!0;const e=new RTCIceCandidate({sdpMid:i.sdpMid,sdpMLineIndex:i.sdpMLineIndex,candidate:i.candidate});this.pcs[t].addIceCandidate(e)}})),this.liveMeshHub.on("UpdateCloseRoom",((e,i)=>{this.log("[UpdateCloseRoom] Close room: ",i),i===this._roomId&&(this.logWarn(`Close the room ${i}`),this._roomId=null,this.isNewJoin=!1,this.isReady=!1,this._removeUser(),this._emitToView("view_LeaveRoom",{roomId:i}))})),this.liveMeshHub.on("UpdateLog",(e=>{e.forEach((e=>this.log(e)))}))}_connect(e){if(this.isNewJoin)try{this.pcs[e]?this.logWarn("Kết nối với",e,"đã được thiết lập"):(this.pcs[e]=new RTCPeerConnection(this.pcConfig),this.pcs[e].onicecandidate=i=>{this._handleIceCandidate(e,i)},this.pcs[e].ontrack=i=>{this._handleOnTrack(e,i)},this.log("Created RTCPeerConnnection for",e)),this._localStream?this._localStream.getTracks().forEach((i=>{this.pcs[e].addTrack(i,this._localStream)})):this.logError("_localStream not found..."),this.isReady&&this._makeOffer(e)}catch(e){this.logError("RTCPeerConnection failed: "+e.message),this._emitToView("view_NewError",{error:`RTCPeerConnection failed: ${e.message}`})}else this.logWarn(`NOT connecting: isNewJoin=${isNewJoin}`)}_sendMessage(e,i=null,t=null){this.liveMeshHub.invoke("SendMessage",this.onlineUser,e,i,t).catch((e=>{this.logError(e),this.logError("Không thể kết nối bạn với máy chủ tín hiệu"),this._emitToView("view_NewNotification",{notification:"Không thể kết nối bạn với máy chủ tín hiệu"})}))}_handleIceCandidate(e,i){this.log("icecandidate event"),i.candidate&&this._sendMessage({type:"candidate",sdpMid:i.candidate.sdpMid,sdpMLineIndex:i.candidate.sdpMLineIndex,candidate:i.candidate.candidate},e)}_makeOffer(e){this.log("Sending offer to",e),this.pcs[e].createOffer().then((i=>{this._setSendLocalDescription(e,i)})).catch((e=>{this.logError("ERROR creating offer"+e.toString()),this._emitToView("view_NewError",{error:"Error while creating an offer"})}))}_answer(e){this.log("Sending answer to",e),this.pcs[e].createAnswer().then((i=>{this._setSendLocalDescription(e,i)})).catch((e=>{this.log("Session description error: "+e.toString()),this._emitToView("view_NewError",{error:`Session description error: ${e.toString()}`})}))}_setSendLocalDescription(e,i){this._sendMessage(i,e),this.pcs[e].setLocalDescription(i)}_handleOnTrack(e,i){this.log("Remote stream added for ",e),this.streams[e]?.id!==i.streams[0].id&&(this.streams[e]=i.streams[0],this._emitToView("view_NewUser",{userKey:e,stream:i.streams[0]}))}_handleUserLeave(e){this.log(e,"Left the room..."),this._removeUser(e),this.isReady=!1}_removeUser(e=null){if(e){if(!this.pcs[e])return;this.pcs[e].close(),delete this.pcs[e],delete this.streams[e]}else{for(const[e,i]of Object.entries(this.pcs))this.log("closing",i),i.close(),delete this.pcs[e];this.streams={}}this._emitToView("view_RemoveUser",{userKey:e})}kickUser(e){this._isAdmin?(this._removeUser(e),this.liveMeshHub.invoke("SendKickout",this.onlineUser,e,this._roomId).catch((e=>{this.logError(e),this.logError("Không thể kết nối bạn với máy chủ tín hiệu"),this._emitToView("view_NewNotification",{notification:"Không thể kết nối bạn với máy chủ tín hiệu"})}))):this._emitToView("view_NewNotification",{notification:"You are not an admin"})}}